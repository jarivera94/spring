<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	

	<context:component-scan base-package="com.helio4.bancol.avaluos.controlador.api" />

	<!-- Jackson configuration -->
	<bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	<bean id="jacksonSerializationConfig" class="org.codehaus.jackson.map.SerializationConfig"
		factory-bean="jacksonObjectMapper" factory-method="getSerializationConfig" />
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="jacksonSerializationConfig" />
		<property name="targetMethod" value="setSerializationInclusion" />
		<property name="arguments">
			<list>
				<value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_NULL</value>
			</list>
		</property>
	</bean>


	<!-- Spring MVC Messages Converter -->


	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json;charset=utf-8" />
		<property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>

	<bean id="httpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes" value="text/html" />
	</bean>

	<!-- Bind the return/request value of the Rest service to the @ResponseBody-@RequestBody. -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				
				<ref bean="jsonMessageConverter" />
				<ref bean="httpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="handlerExceptionResolver"
		class="org.springframework.web.servlet.handler.HandlerExceptionResolverComposite">
		<property name="order" value="0" />
		<property name="exceptionResolvers">
			<list>
				<bean id="exceptionHandlerExceptionResolver"
					class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
					<property name="messageConverters">
						<list>
							
							<ref bean="jsonMessageConverter" />
							<ref bean="httpMessageConverter" />
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver" />
				<bean
					class="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver" />
			</list>
		</property>
	</bean>

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	
	<!-- Enable the annotations for defining the secure role -->
    <sec:global-method-security secured-annotations="enabled" />

</beans>